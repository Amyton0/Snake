class Snake {
    field Array snake;
    field int snakeSize;

    constructor Snake new(int height, int width, int size) {
        var int i, x0, y0;
        let snake = Array.new(size);
        let snakeSize = size;
        let i = 0;
        let x0 = width / 2 + 1;
        let y0 = height / 2 - (size / 2 - 1);

        while (i < snakeSize) {
            let snake[i] = SnakeSegment.new(RelativeCoordinates.new(x0, y0 + i));
            let i = i + 1;
        }
        return this;
    }
    
    method void draw() {
        var int i;
        var SnakeSegment segment;
        let i = 0;
        while (i < snakeSize) {
            let segment = snake[i];
            do segment.draw();
            let i = i + 1;
        }
        return;
    }

    method bool move(int direction) {
        var int i;
        var SnakeSegment lastSegment, firstSegment, segment;
        var RelativeCoordinates firstSegmentCoords, segmentCoords;

        let lastSegment = snake[snakeSize - 1];
        let firstSegment = snake[0];
        let firstSegmentCoords = firstSegment.getRelativeCoordinates();

        do lastSegment.erase();
        do lastSegment.dispose();

        let i = snakeSize - 1;

        while (i > 0) {
            let segment = snake[i - 1];
            let segmentCoords = segment.getRelativeCoordinates();
            let snake[i] = SnakeSegment.new(RelativeCoordinates.new(segmentCoords.getX(), segmentCoords.getY()));
            let i = i - 1;
            do segment.dispose();
        }

        if (direction = 0) {
            if (firstSegmentCoords.getY() - 1 < 0) { return false; }
            let snake[0] = SnakeSegment.new(RelativeCoordinates.new(firstSegmentCoords.getX(), firstSegmentCoords.getY() - 1));
        }
        if (direction = 1) {
            if (firstSegmentCoords.getX() + 1 > Main.getWidthInCells()) { return false; }
            let snake[0] = SnakeSegment.new(RelativeCoordinates.new(firstSegmentCoords.getX() + 1, firstSegmentCoords.getY()));
        }
        if (direction = 2) {
            if (firstSegmentCoords.getY() + 1 > Main.getHeightInCells()) { return false; }
            let snake[0] = SnakeSegment.new(RelativeCoordinates.new(firstSegmentCoords.getX(), firstSegmentCoords.getY() + 1));
        }
        if (direction = 3) {
            if (firstSegmentCoords.getX() - 1 < 0) { return false; }
            let snake[0] = SnakeSegment.new(RelativeCoordinates.new(firstSegmentCoords.getX() - 1, firstSegmentCoords.getY()));
        }

        return true;
    }

    method void increase(int direction) {
        var int i;
        var Array newSnake;
        var SnakeSegment firstSegment, segment;
        var RelativeCoordinates firstSegmentCoords, segmentCoords;

        let snakeSize = snakeSize + 1;
        let newSnake = Array.new(snakeSize);
        let i = snakeSize - 1;

        let firstSegment = snake[0];
        let firstSegmentCoords = firstSegment.getRelativeCoordinates();

        while (i > 0) {
            let segment = snake[i - 1];
            let segmentCoords = segment.getRelativeCoordinates();
            let newSnake[i] = SnakeSegment.new(RelativeCoordinates.new(segmentCoords.getX(), segmentCoords.getY()));
            let i = i - 1;
            do segment.dispose();
        }

        if (direction = 0) {
            let newSnake[0] = SnakeSegment.new(RelativeCoordinates.new(firstSegmentCoords.getX(), firstSegmentCoords.getY() - 1));
        }
        if (direction = 1) {
            let newSnake[0] = SnakeSegment.new(RelativeCoordinates.new(firstSegmentCoords.getX() + 1, firstSegmentCoords.getY()));
        }
        if (direction = 2) {
            let newSnake[0] = SnakeSegment.new(RelativeCoordinates.new(firstSegmentCoords.getX(), firstSegmentCoords.getY() + 1));
        }
        if (direction = 3) {
            let newSnake[0] = SnakeSegment.new(RelativeCoordinates.new(firstSegmentCoords.getX() - 1, firstSegmentCoords.getY()));
        }

        do snake.dispose();

        let snake = newSnake;

        return;
    }

    method bool isCollision() {
        var int i;
        
        var SnakeSegment firstSegment, segment;
        var RelativeCoordinates firstSegmentCoords, segmentCoords;

        let firstSegment = snake[0];
        
        let firstSegmentCoords = firstSegment.getRelativeCoordinates();

        let i = 2;

        while (i < snakeSize) {
            let segment = snake[i];
            let segmentCoords = segment.getRelativeCoordinates();
            if (firstSegmentCoords.getX() = segmentCoords.getX()) {
                if (firstSegmentCoords.getY() = segmentCoords.getY()) {
                    return true;
                }
            }
            let i = i + 1;
        }

        return false;
    }

    method SnakeSegment getHead() {
        return snake[0];
    }

    method int getSnakeSize() {
        return snakeSize;
    }
}