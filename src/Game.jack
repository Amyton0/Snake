class Game {

   field int topBorder;
   field int leftBorder;
   field int bottomBorder;
   field int rightBorder;
   field int direction;

   field int heightInCells;
   field int wigthInCells;
   field int cellSize;

   field int score;

   field Snake snake;
   field Food food;


   constructor Game new(int top, int left, int bottom, int right, int cell) {
      let topBorder = top;
      let leftBorder = left;
      let bottomBorder = bottom;
      let rightBorder = right;
      let cellSize = cell;

      let heightInCells = (bottomBorder - topBorder - 1) / (cellSize + 1);
      let wigthInCells = (rightBorder - leftBorder - 1) / (cellSize + 1);

      let direction = 0;

      do Frame.drawFrame(leftBorder, topBorder, rightBorder, bottomBorder, 1);
      do Frame.drawFrame(4, 4, 105, 105, 1);
      do Frame.drawTextForScore(1, 1);
      do Frame.drawScore(1, 7, score);

      let snake = Snake.new(heightInCells, wigthInCells, 5);
      let food = Food.new(topBorder, bottomBorder, leftBorder, rightBorder);

      return this;
   }

    method void run() {
      var char key;
      var boolean exit;
      var SnakeSegment head;
      var RelativeCoordinates headCoordinates, foodCoordinates;

      let exit = false;
      let score = 0;
      
      while (~exit) {
         let key = Keyboard.keyPressed();

         if (key = 81)  { let exit = true; }
         if (key = 131) { if (~(direction = 2)) { let direction = 0; } }
         if (key = 132) { if (~(direction = 3)) { let direction = 1; } }
         if (key = 133) { if (~(direction = 0)) { let direction = 2; } }
         if (key = 130) { if (~(direction = 1)) { let direction = 3; } }
         
         do Sys.wait(35);
         
         let head = snake.getHead();
         let headCoordinates = head.getRelativeCoordinates();

         let foodCoordinates = food.getRelativeCoordinates();

         if (headCoordinates.getX() = foodCoordinates.getX()) {
            if (headCoordinates.getY() = foodCoordinates.getY()) {
               do snake.increase(direction);
               do food.erase();
               do food.dispose();
               let food = Food.new(topBorder, bottomBorder, leftBorder, rightBorder);
               let score = score + 1;
               do Frame.drawScore(1, 7, score);
            }
         }
         
         do snake.draw();
         do food.draw();

         if (~snake.move(direction)) {
            do EndScreen.drawEnd(10, 27, score);
            let exit = true;
         }

         if (snake.isCollision()) {
            do EndScreen.drawEnd(10, 27, score);
            let exit = true;
         }
     }
     return;
   }
}